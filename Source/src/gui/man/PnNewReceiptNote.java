/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.man;

import java.sql.Date;
import java.util.Calendar;
import java.util.TimeZone;
import javax.swing.table.DefaultTableModel;
import cnDatabase.*;
import javax.swing.JOptionPane;

/**
 *
 * @author ng√¥
 */
public class PnNewReceiptNote extends javax.swing.JPanel {

    manHome man;
    PnImport im;
    public DefaultTableModel model;
    String warehouseID;

    /**
     * Creates new form PProduct
     */
    public PnNewReceiptNote() {
        initComponents();
        initModel();
    }

    public PnNewReceiptNote(manHome man, PnImport im) {
        this.man = man;
        this.im = im;
        initComponents();
        initModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNo = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        txtPerson = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        cbType = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        cbWarehouse = new javax.swing.JComboBox();
        cbTransfer = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        btnCannel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnCannel1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPrDe = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("New receipt note");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("From");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Date");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Receipt No");

        txtNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDate.setText("read only");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Type");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Person");

        txtFrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtPerson.setEditable(false);
        txtPerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPerson.setText("read only");

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Add new product");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "buy", "return", "transfer" }));
        cbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTypeItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Comment");

        txtComment.setColumns(20);
        txtComment.setRows(5);
        jScrollPane2.setViewportView(txtComment);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Warehouse");

        cbWarehouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbWarehouseItemStateChanged(evt);
            }
        });

        cbTransfer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTransferItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel15))
                        .addGap(78, 78, 78))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPerson)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(161, 161, 161)))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbType, cbWarehouse, txtDate, txtFrom, txtNo, txtPerson});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(cbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbType, cbWarehouse, txtDate, txtFrom, txtNo, txtPerson});

        btnCannel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCannel.setText("Cannel");
        btnCannel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCannelActionPerformed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCannel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCannel1.setText("Reset");
        btnCannel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCannel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addGap(76, 76, 76)
                .addComponent(btnCannel)
                .addGap(44, 44, 44)
                .addComponent(btnCannel1)
                .addGap(180, 180, 180))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCannel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCannel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        tbPrDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Detail ID", "Name", "Quantity", "Price", "Comment"
            }
        ));
        jScrollPane1.setViewportView(tbPrDe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (txtNo.getText().trim().length()<5) {
            JOptionPane.showMessageDialog(null, "receiptNO must have at least 5 character!");
            return;
        }
        if (txtFrom.getText().trim().length()<1) {
            JOptionPane.showMessageDialog(null, "From field cant not bank!");
            return;
        }
        
        if (txtComment.getText().trim().length()<1) {
            JOptionPane.showMessageDialog(null, "comment field cant not bank!");
            return;
        }
        if (tbPrDe.getRowCount()<=0) {
            JOptionPane.showMessageDialog(null, "receipt must have at least one product!");
            return;
        }
        
        String billNo, date, UserID, type, from, comment;
        billNo = txtNo.getText().trim();
        date = txtDate.getText().trim();
        UserID = man.userName;

        type = cbType.getSelectedItem().toString().trim();
        from = txtFrom.getText().trim();
        comment = txtComment.getText().trim();
        ImportList userList = new ImportList();
        for (Import o : userList.getList()) {
            if (billNo.equals(o.billNo.trim())) {
                 JOptionPane.showMessageDialog(null, "billNo have already existed! Please enter another.");
            return;
            }
        }
        Import i = new Import(billNo, date, UserID, type, warehouseID, from, comment);
        ImportList il = new ImportList();
        //insert tbImport
        if (il.insert(i) == true) {
            JOptionPane.showMessageDialog(null, "Insert seccussful!");
        } else {
            JOptionPane.showMessageDialog(null, "error when insert!");
        }
        //insert tbImportDetail
        for (int j = 0; j < tbPrDe.getRowCount(); j++) {
            String detailID, productID = "", commentp;
            int quantity;
            detailID = tbPrDe.getValueAt(j, 0).toString().trim();
            String productName = tbPrDe.getValueAt(j, 1).toString().trim();
            ProductList p = new ProductList();
            for (Product o : p.getList()) {
                if (productName.equals(o.name.trim())) {
                    productID = o.productID;
                }
            }
            quantity = Integer.parseInt(tbPrDe.getValueAt(j, 2).toString().trim());
            commentp = tbPrDe.getValueAt(j, 4).toString().trim();
            Idetail ide = new Idetail(detailID, billNo, productID, comment, quantity);
            IdetailList idl = new IdetailList();
            if (idl.insert(ide) == false) {
                JOptionPane.showMessageDialog(null, "there are an error when insert product!");
            }
        }
        //update quantity in tbProduct
        for (int j = 0; j < tbPrDe.getRowCount(); j++) {
            String productName = tbPrDe.getValueAt(j, 1).toString().trim();
            int quan = Integer.parseInt(tbPrDe.getValueAt(j, 2).toString().trim());
            String productID="", name="", Unit="",  status="", manufacturer="";
            int cuQuan = 0,catID=0, Quantity=0, unitPrice=0;
            ProductList p = new ProductList();
            for (Product o : p.getList()) {
                if (productName.equals(o.name.trim())) {
                    productID = o.productID;
                    cuQuan = o.Quantity;
                    name = o.name;
                    Unit = o.Unit;
                    status = o.status;
                    manufacturer = o.manufacturer;
                    catID = o.catID;
                    unitPrice = o.unitPrice;
                    Quantity = quan+cuQuan;
                     Product pr = new Product(productID, name, Unit, status, manufacturer, catID, Quantity, unitPrice);
                     if (p.update(pr)==false) {
                        JOptionPane.showMessageDialog(null, "update price have error!");
                    }
                }
            }
           
            
            

        }

         model.setRowCount(0);
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        man.trypane.removeAll();
        man.trypane.add(new PnAddProduct(this, man));
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCannelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCannelActionPerformed
      man.trypane.removeAll();
      man.trypane.add(new PnImport(man));
      man.trypane.validate();
      man.trypane.updateUI();
    }//GEN-LAST:event_btnCannelActionPerformed

    private void cbWarehouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbWarehouseItemStateChanged
        WarehouseList wh = new WarehouseList();
        for (Warehouse o : wh.getList()) {
            if (cbWarehouse.getSelectedItem().equals(o.name.trim())) {
                warehouseID = o.warehouseID.toString().trim();

            }
        }

    }//GEN-LAST:event_cbWarehouseItemStateChanged

    private void cbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTypeItemStateChanged
       String t = cbType.getSelectedItem().toString().trim();
        if (t.equals("transfer")) {
            cbTransfer.setVisible(true);
            txtFrom.setText("");
            txtFrom.setEnabled(false);
        }else{
            cbTransfer.setVisible(false);
            txtFrom.setEnabled(true);
        }
    }//GEN-LAST:event_cbTypeItemStateChanged

    private void cbTransferItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTransferItemStateChanged
       txtFrom.setText(cbTransfer.getSelectedItem().toString().trim());
    }//GEN-LAST:event_cbTransferItemStateChanged

    private void btnCannel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCannel1ActionPerformed
       txtComment.setText(null);
      txtFrom.setText(null);
      txtNo.setText(null);
     model.setRowCount(0);
    }//GEN-LAST:event_btnCannel1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCannel;
    private javax.swing.JButton btnCannel1;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox cbTransfer;
    private javax.swing.JComboBox cbType;
    private javax.swing.JComboBox cbWarehouse;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable tbPrDe;
    private javax.swing.JTextArea txtComment;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtNo;
    private javax.swing.JTextField txtPerson;
    // End of variables declaration//GEN-END:variables

    private void initModel() {
        model = (DefaultTableModel) tbPrDe.getModel();
        txtPerson.setText(man.fullname);

        Calendar now = Calendar.getInstance();
        String ye = String.valueOf(now.get(Calendar.YEAR));
        String mo = String.valueOf((now.get(Calendar.MONTH) + 1)); // Note: zero based!
        String da = String.valueOf(now.get(Calendar.DAY_OF_MONTH));
        String date = ye + "-" + mo + "-" + da;
        txtDate.setText(date);

        WarehouseList wh = new WarehouseList();
        for (Warehouse o : wh.getList()) {
            cbWarehouse.addItem(o.name.trim());
            cbTransfer.addItem(o.name.trim());
            
        }
        cbTransfer.setVisible(false);

    }
}
